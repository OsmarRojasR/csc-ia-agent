# /etc/nginx/sites-enabled/proxy.conf
# Config generada para exponer:
# - agent-app.cascadacon.com  → backend 127.0.0.1:9000 (FastAPI webhook)
# - agent-stream.cascadacon.com → backend 127.0.0.1:9001 (WS bridge)
# - agent-web.cascadacon.com (solo Streamlit por rutas)
#     /insurance/ → 127.0.0.1:8501 (streamlit-insurance)
#     /help/      → 127.0.0.1:8511 (streamlit-help)
# Los agentes ADK quedan solo en localhost: 3000 (insurance) y 3100 (help)

# ==============================
# agent-app → 9000
# ==============================
server {
    server_name agent-app.cascadacon.com;

    location / {
        proxy_pass http://127.0.0.1:9000;
        include /etc/nginx/snippets/proxy-headers.conf;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/agent-app.cascadacon.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/agent-app.cascadacon.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# ==============================
# agent-stream → 9001 (incluye WebSockets)
# ==============================
server {
    server_name agent-stream.cascadacon.com;

    location /voice-stream {
        proxy_pass http://127.0.0.1:9001;
        include /etc/nginx/snippets/proxy-headers.conf;

        # Imprescindible para WebSockets
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Para streams largos
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # (Opcional) otras rutas al mismo backend
    location / {
        proxy_pass http://127.0.0.1:9001;
        include /etc/nginx/snippets/proxy-headers.conf;
    }

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/agent-stream.cascadacon.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/agent-stream.cascadacon.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
}

# ==================================================
# agent-web → Solo Streamlit por rutas (sin exponer agentes)
# ==================================================
# Opción HTTPS estándar en 443 con rutas /insurance y /help
server {
    server_name agent-web.cascadacon.com;

    listen 443 ssl;
    ssl_certificate /etc/letsencrypt/live/agent-web.cascadacon.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/agent-web.cascadacon.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Landing opcional
    location = / { return 302 /insurance/; }

    # Streamlit insurance → 127.0.0.1:8501
    location /insurance/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;

        proxy_pass http://127.0.0.1:8501;
    }

    # Streamlit help → 127.0.0.1:8511
    location /help/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;

        proxy_pass http://127.0.0.1:8511;
    }
}

# Opción adicional (HTTP en 8000) si quieres exponer también sin TLS en ese puerto
# Puedes comentar este bloque si no lo necesitas
server {
    server_name agent-web.cascadacon.com;
    listen 8000;

    location = / { return 302 /insurance/; }

    location /insurance/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_pass http://127.0.0.1:8501;
    }

    location /help/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_pass http://127.0.0.1:8511;
    }
}

# ==============================
# HTTP → HTTPS / redirecciones (Certbot)
# ==============================
server {
    if ($host = agent-app.cascadacon.com) {
        return 301 https://$host$request_uri;
    }
    listen 80;
    server_name agent-app.cascadacon.com;
    return 404; # managed by Certbot
}

server {
    if ($host = agent-stream.cascadacon.com) {
        return 301 https://$host$request_uri;
    }
    listen 80;
    server_name agent-stream.cascadacon.com;
    return 404; # managed by Certbot
}

server {
    if ($host = agent-web.cascadacon.com) {
        return 301 https://$host$request_uri;
    }
    listen 80;
    server_name agent-web.cascadacon.com;
    return 404; # managed by Certbot
}
